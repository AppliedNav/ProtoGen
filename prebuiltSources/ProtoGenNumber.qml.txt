import QtQuick 2.9
import QtQuick.Controls 2.3

Row {
    id: control

    property alias real: 0
    property alias label: protoGenNumberLabel.text
    property alias units: protoGenNumberUnits.text
    property string comment: ""

    width: parent.width
    height: 24
    spacing: 10

    Label {
        id: protoGenNumberLabel
        clip: true
        font: globalProps.fontRegular
        width: control.width/3-control.spacing
        height: control.height
        verticalAlignment: Text.AlignVCenter
        horizontalAlignment: Text.AlignRight
        ToolTip {
            text: control.comment
            visible: ("" !== control.comment) ? mouseArea.containsMouse : false
        }
        MouseArea {
            id: mouseArea
            anchors.fill: parent
            hoverEnabled: true
        }
    }

    TextField {
        id: protoGenNumberValue
        validator: globalProps.doubleValidator
        font: globalProps.fontRegular
        verticalAlignment: Text.AlignVCenter
        horizontalAlignment: Text.AlignRight
        rightPadding: 5
        topPadding: 5
        bottomPadding: 5
        width: parent.width/2-parent.spacing
        onTextChanged: parent.parent.synchro = false
        background: Rectangle {
            anchors.fill: parent
            color: protoGenNumberValue.focus ? "gray" : "transparent"
            border.color: protoGenNumberValue.focus ? "white" : "gray"
        }
        inputMethodHints: Qt.ImhFormattedNumbersOnly
        selectByMouse: true
        text: control.val.toFixed(globalProps.precision)
        onAccepted: focus = false
        onEditingFinished: control.val = Number(text)
        onActiveFocusChanged: {if (activeFocus) selectAll()}
    }

    Label {
        id: protoGenNumberUnits
        clip: true
        font: globalProps.fontRegular
        width: parent.width/6-parent.spacing
        height: parent.height
        verticalAlignment: Text.AlignVCenter
        horizontalAlignment: Text.AlignHCenter
        elide: Text.ElideRight
        MouseArea {
            id: unitsMouseArea
            anchors.fill: parent
            hoverEnabled: true
        }
        ToolTip {
            text: protoGenNumberUnits.text
            visible: protoGenNumberUnits.truncated && unitsMouseArea.containsMouse
        }
    }
}
